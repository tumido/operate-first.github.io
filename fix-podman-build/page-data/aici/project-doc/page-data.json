{"componentChunkName":"component---src-templates-doc-js","path":"/aici/project-doc","result":{"data":{"site":{"siteMetadata":{"title":"Operate First"}},"mdx":{"id":"20f317d6-6b8c-5dbe-8a5c-f7013f2f83dc","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"AI Supported Continuous Integration Testing\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Developing AI tools for developers by leveraging the open data made available by OpenShift and Kubernetes CI\\nplatforms.\")), mdx(\"p\", null, \"AI Ops is a critical component of supporting any Open Hybrid Cloud infrastructure. As the systems we operate become\\nlarger and more complex, intelligent monitoring tools and response agents will become a necessity. In an effort to\\naccelerate the development, access and reliability of these intelligent operations solutions, our aim here is to\\nprovide access to an open community, open operations data and open infrastructure for data scientists and devops\\nengineers.\"), mdx(\"p\", null, \"One major component of the operations workflow is Continuous Integration (CI), which involves running automated builds\\nand tests of software before it is merged into a production code base. If you are developing a container orchestration\\nplatform like Kubernetes or OpenShift, these builds and tests will produce a lot of data that can be difficult to parse\\nwhen you are trying to figure out why a build is failing or why a certain set of tests aren\\u2019t passing.        \"), mdx(\"p\", null, \"OpenShift, Kubernetes and a few other platforms have made their CI data public. This is real world multimodal\\nproduction operations data, a rarity for public data sets today. This represents a great starting point and first initial\\nproblem for the AIOps community to tackle. Our aim is to begin cultivating this open source AIOps project by\\ndeveloping, integrating and operating AI tools for CI by leveraging the open data that has been made available by\\nOpenShift, Kubernetes and others.\"), mdx(\"p\", null, \"The higher order goal to keep in mind for any tools developed here should be to assist developers in decreasing their\\ntime to resolution for issues that are signaled by anything present in the CI data. There are a lot of ways that this\\ncould be done, and instead of pre-defining a specific problem to solve, our immediate thinking is to make the initial\\ntools and relevant data as accessible as possible to foster collaboration and contributions between data scientists and\\nOpenShift engineers.   \"), mdx(\"h2\", null, \"First Step/ Ways to get Involved:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"1 )\"), \" Exploratory data analysis of available data sources (gcsweb, TestGrid, Sippy) to understand the different data\\ntypes that need to be addressed and identify what kind of ML approaches are possible. \"), mdx(\"ul\", {\n    \"className\": \"pf-c-list\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Outcome will be notebooks that explain the data, how to access it and preprocess it in a data science friendly\\nformat (see this\\n\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/aicoe-aiops/ocp-ci-analysis/blob/master/notebooks/TestGrid_EDA.ipynb\"\n  }), \"notebook for TestGrid data\"), \"\\nfor an example).     \")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"2 )\"), \" Failure type classification with the Testgrid data to address an existing manual process executed by subject\\nmatter experts (SME). \"), mdx(\"ul\", {\n    \"className\": \"pf-c-list\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Automate the manual process outlined by an SME \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/aicoe-aiops/ocp-ci-analysis/issues/1\"\n  }), \"here\"), \". \")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"3 )\"), \" Tooling to generate analysis reports for platforms, grids and test within the TestGrid data.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","description":null}}},"pageContext":{"id":"20f317d6-6b8c-5dbe-8a5c-f7013f2f83dc","slug":"project-doc"}},"staticQueryHashes":["117426894","3000541721","3753692419"]}